 int path(int i,int j,int m,int n,vector<vector<int>>&dp)
        {
            cout<<"2";
            int count=0;
            if((m==i-1)&&(n==j-1))
                return 1;
            else if(m>=i||n>=j)
            {
                    return 0;
            }
            else 
            {
                if(dp[m][n]!=0)
                {
                    return dp[m][n];
                }
               
                return dp[m][n]= path(i,j,m+1,n,dp)+path(i,j,m,n+1,dp);
            }
            
        }
    
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m,vector<int>(n,0));
        int count =0;
        int i=0,j=0;
        if(m==n&&n==1)
            return 1;
        else
            return path(m,n,i+1,j,dp)+path(m,n,i,j+1,dp);
        
        
    }
